
#================================================================================
#
# Einfaches Beispiel fuer graphml:
# Gewichteter, gerichteter Graph
#

<graphml>
 <desc>Human-readable description of the file, version history </desc>
 <key id="label"><desc>A human readable label assigned to the
vertex</desc></key>
 <key id="weight"><desc>Meaning-free edge weight</desc></key>
 <graph>
   <data key="label">This is a label</data> # Of the whole graph?
     <node id="1">
       <data key="label">Das erste</data>
     </node>
     <node id="2">
       <data key="label">Das zweite</data>
     </node>
     <node id="3">
     <data key="label">Das dritte</data>
     </node>
     <edge source="1" target="2"> # NOTE: edge ids optional!
       <data key="weight">1.1</data>
     </edge>
     <edge source="2" target="3"/>
       <data key="weight">2.2</data>
     </edge>
     <edge source="3" target="1"/>
       <data key="weight">3.4</data>
     </edge>
  </graph>
</graphml>



#================================================================================
#
# Komplexeres Beispiel fuer graphml:
# Gewichteter, gerichteter Graph, Properties, genuegend info zum Zeichnen
#

<graphml>

 <desc>Human-readable description of the file, version history </desc>
 <key id="properties"><desc>A list of properties of the graph</desc></key>
 <key id="label"><desc>A human readable label assigned to the
vertex</desc></key>
 <key id="length"><desc>Length of a pipeline</desc></key>
 <key id="capacity" gd:type="int"><desc>Capacity</desc></key>
#! Typisieren von parametern


 <!-- ====== Defaults for the visual representation of nodes/edges -->

 <!-- node attribute of type paint with default value -->
 <key id="npaint" for="node" gd:type="paint">
#! Typisieren von parametern
  <paint red="255" blue="228" green="255"/>
 </key>

 <!-- edge attribute of type paint with default value -->
 <key id="epaint" for="edge" gd:type="paint">
  <paint red="0" blue="0" green="0" style="solid"/>
 </key>

 <!-- node attribute of type point with default value -->
 <key id="ngeom" for="node" gd:type="point">
  <point shape="circle" width="25" height="25"/>
 </key>

 <!-- edge attribute of type line with default value -->
 <key id="egeom" for="edge" gd:type="line">
  <line shape="poly" width="1"/>
 </key>


 <!-- ====== The graph ========================================== -->
 <graph>
   <data key="properties">
     <Directed value=true>
     <Euclidean value=true>
     <Simple value=true>
   </data>
   <data key="label">This is a label</data>                           # Of
the whole graph?
     <node id="1">
       <data key="label">Das erste</data>
       <data key="ngeom"><pos x="291.186" y="229.601"/></data>
     </node>
     <node id="2">
       <data key="label">Das zweite</data>
       <data key="ngeom"><pos x="122.22" y="942.23"/></data>
     </node>
     <node id="3">
       <data key="label">Das dritte</data>
       <data key="ngeom"><pos x="291.186" y="333.601"/></data>
     </node>
     <edge source="1" target="2">                                     #
NOTE: edge ids optional!
       <data key="length">1</data>
       <data key="capacity">1</data>
     </edge>
     <edge source="2" target="3"/>
       <data key="length">2.2</data>
       <data key="capacity">1</data>
     </edge>
     <edge source="3" target="1"/>
       <data key="length">3.4</data>
       <data key="capacity">5</data>
     </edge>
  </graph>
</graphml>




#================================================================================
#
# Komplexeres Beispiel fuer graphml:
# Diskretes HMM + info zum Zeichnen
#

<graphml>

 <desc>HMM trainiert auf Daten der BSPK Hintertupfingen</desc>
 <key id="label"><desc>A human readable label assigned to the vertex</desc></key>
 <key id="prob"><desc>transition probability of an edge</desc></key>
 <key id="initial"><desc>Initial probability of a state</desc></key>
 <key id="emission" gd::type="DiscreteProbDist"><desc>Discrete emission probability</desc></key>
 <key id="alphabet"><desc>The alphabet used for emissions</desc></key>
 <data alphabet low="1" up="3">
     <!-- Alphabet is a coding map: number to event, observation -->
     <Symbol code="1">Auszahlung</Symbol>
     <Symbol code="2">Einzahlung</Symbol>
     <Symbol code="3">Tilgung</Symbol>
 </data>

 <!-- ====== Defaults for the visual representation of nodes/edges -->
 <!-- NEW BY PP -->
 <visual>
   <!-- node attribute of type paint with default value -->
   <key id="npaint" for="node" gd:type="paint">
   <!-- Typisieren von parametern -->
     <paint red="255" blue="228" green="255"/>
   </key>

   <!-- edge attribute of type paint with default value -->
   <key id="epaint" for="edge" gd:type="paint">
     <paint red="0" blue="0" green="0" style="solid"/>
   </key>

   <!-- node attribute of type point with default value -->
   <key id="ngeom" for="node" gd:type="point">
     <point shape="circle" width="25" height="25"/>
   </key>

   <!-- edge attribute of type line with default value -->
   <key id="egeom" for="edge" gd:type="line">
     <line shape="poly" width="1"/>
   </key>
 </visual>

 <!-- ====== The HMM ========================================== -->
 <graph>
   <data key="alphabet">
     <!--  Wirklich neu! -->
     <low value=1>
     <hi value=2> 
     <!-- Alphabet is a coding map: number to event, observation -->
     <map>
       <Symbol code="1">Auszahlung</Symbol>
       <Symbol code="2">Einzahlung</Symbol>
       <Symbol code="3">Tilgung</Symbol>
     </map>
   </Alphabet>

   <data key="label">This is a label</data> <!-- Of the whole graph? -->
     <node id="1">
       <data key="label">Das erste</data>
       <data key="initial">0.3</data>
       <data key="emissions">0.2 0.2 0.6</data>
       <data key="ngeom"><pos x="291.186" y="229.601"/></data>
     </node>
     <node id="2">
       <data key="label">Das zweite</data>
       <data key="initial">0.2</data> 
       <data key="ngeom"><pos x="122.22" y="942.23"/></data> 
       <data key="emissions">0.9 0.1 0.0</data>
     </node>
     <node id="3">
       <data key="label">Das dritte</data>
       <data key="initial">0.5</data>
       <data key="ngeom"><pos x="291.186" y="333.601"/></data>
       <data key="emissions">0.4 0.1 0.5</data>
     </node>
     <edge source="1" target="2">
       <data key="prob">0.4</data>
     </edge>
     <edge source="2" target="3"/>
       <data key="prob">0.7</data>
     </edge>
     <edge source="3" target="1"/>
       <data key="prob">0.1</data>
     </edge>
  </graph>
</graphml>


<!-- ====== The HMM ========================================== -->
<hmm>
  <!-- optional -->
  <alphabet>
     <symbol id="A">Auszahlung</symbol>
     <symbol id="E">Einzahlung</symbol>
     <symbol id="T">Tilgung</symbol>
  </alphabet>

  <!-- optional -->
  <visual>
    <gred>
      <!-- ====== Defaults for the visual representation of nodes/edges -->
    </gred>
  </visual>

  <state id="s1">
    <initial>0.3</initial>
    <emissions>0.2 0.2 0.6</emissions>
    <!-- optional -->
    <visual>
      <gred>
        <ngeom><pos x="291.186" y="229.601"/></ngeom>
        <label>Der erste Zustand</label>
      </gred>
    </visual>	 
  </state>

  <state id="s2">
    <initial>0.2</initial> 
    <emissions>0.9 0.1 0.0</emissions>
    <!-- optional -->
    <visual>
      <gred>
        <label>Der zweite Zustand</label>
        <ngeom><pos x="122.22" y="942.23"/></ngeom> 
      </gred>
    </visual>
  </state>

  <state id="s3">
    <initial>0.5</initial> 
    <emissions>0.4 0.1 0.5</emissions>
    <!-- optional -->
    <visual>
      <gred>
        <label>Der zweite Zustand</label>
        <ngeom><pos x="100.0" y="200.0"/></ngeom> 
      </gred>
    </visual>
  </state> 

  <edge source="s1" target="s2">
    <prob>0.4</prob>
  </edge>

  <edge source="s1" target="s3">
    <prob>0.6</prob>
  </edge>

  <edge source="s2" target="s3">
    <prob>1.0</prob>
  </edge>

  <edge source="s3" target="s1">
    <prob>0.5</prob>
  </edge>

  <edge source="s3" target="s2">
    <prob>0.5</prob>
  </edge>

  <!-- ODER: -->
  <edges source="s1">
    <prob>0.0 0.4 0.6</prob>
  </edges>

  <edges source="s2">
    <prob>0.0 0.0 1.0</prob>
  </edges>

  <edges source="s3">
    <prob>0.5 0.5 0.0</prob>
  </edges>
</hmm>


<!-- ====== The HMM ========================================== -->
<hmm version="1.0">
  <alphabet>
     <symbol id="A">Auszahlung</symbol>
     <symbol id="E">Einzahlung</symbol>
     <symbol id="T">Tilgung</symbol>
  </alphabet>

  <state id="s1">
    <initial>0.3</initial>
    <emissions>0.2 0.2 0.6</emissions>
  </state>

  <state id="s2">
    <initial>0.2</initial> 
    <emissions>0.9 0.1 0.0</emissions>
  </state>

  <state id="s3">
    <initial>0.5</initial> 
    <emissions>0.4 0.1 0.5</emissions>
  </state> 

  <transitions>
    <from-state id="s1">0.0 0.4 0.6</from-state>
    <from-state id="s2">0.0 0.0 1.0</from-state>
    <from-state id="s3">0.5 0.5 0.0</from-state>
  </transitions>
</hmm>


#================================================================================
#
#
# Als Delta:
#

Gaussverteilungen ueber den reellen Zahlen:
 
  <key id="emission" gd::type="GaussProbDist"><desc>Continous emission probability</desc></key>

  In: <node id="3">
       <data key="emissions">mu sigma</data>

Beliebige Verteilungen:

  <key id="emission" gd::type="ProbDist"><desc>Continous emission probability</desc></key>

  In: <node id="3">
       <data key="emissions">
             <Gauss mu=1 sigma=1>
       </data>

  oder 
       <data key="emissions">
             <LeftGauss low=0 mu=1 sigma=1> # Abgeschnittene Gaus
       </data>

Mixturen beliebiger Verteilungen:

  <key id="emission" gd::type="MixtureProbDist"><desc>Continous emission probability</desc></key>

  In: <node id="3">
       <data key="emissions"> 
         <mixture>
             0.4 <Gauss mu=1 sigma=1>
             0.6 <LeftGauss low=0 mu=1 sigma=1
         </mixture>
       </data>


Vektorwertige Ausgaben brauchen wir derzeit nicht

HMMs mit Ausgabeklassen einfach statt 

 <key id="prob"><desc>transition probability of an edge</desc></key>

mit 

 <key id="prob1" gd:type="float"><desc>transition probability of an edge
for class 1</desc></key>
 <key id="prob2" gd:type="float"><desc>transition probability of an edge
class 2</desc></key>

oder 
 <key id="prob" gd:type="float_vector"><desc>transition probability of an
edge class 2</desc></key>

  und dann 

 <data key="prob">0.2 0.3 ... 0.8</key>

in den Kanten weiterhelfen.


