At the moment just static libraries can be build on Windows.
Dynamic link library (dll) support will be added later.



Visual C++
----------

a) Preparing gsl

   The Windows version of gsl 1.0, that compiles with
   Visual C++ can be downloaded from 

   http://www.network-theory.co.uk/gsl/freedownloads.html

   Download the Source code package and compile it.
   Don't forget to run COPY_GSL_HEADERS.bat afterwards, 
   which copies all header files to the gsl/ subdirectory.

   In the following documentation we assume that the gsl 
   directory is c:\prefix\gsl-1.0\ while prefix depends
   on the location to which you have unzipped the package.
   

a) Building ghmm.lib

   Go into the VisualC directory that is created, and 
   double-click on the VC++ workspace file ghmm.dsw. 
   This should open up VisualC.

   Now you have to ensure that the required gsl library
   is found. Change to ghmm project setting and add
   the include directory of the gsl library at C/C++ - 
   Preprocessor - Additional include dirs. 

   You will find the include dirs:
   ..\..\,..\..\..\gsl-1.0
   
   If the prefixes of gsl and ghmm are different you have 
   to change it to ..\..\,c:\prefix\gsl-1.0\

   You also may add c:\prefix\gsl-1.0\ to the global search 
   directories of VisualC++, so that gsl headers will be 
   found by all of your projects. To do this add 
   c:\prefix\gsl-1.0\ to tools - directories.

   Since gsl.lib is needed for successfully linking our
   project, copy gsl.lib to the main ghmm directory
   (the directory that contains README.Win).

   Now we are ready to build ghmm.lib.

b) Building example programs:

   Project files of some example programs are also included
   in the ghmm workspace. They should compile without any
   further adjustments. To run them, go to the appropriate
   directory (e.g. VisualC/coin_toss_test/Release) and double
   click the created .exe file.


Other Compiler:
---------------

Also other compiler should work well. But we have not tested
any so far.
